#!/bin/bash
# Pre-commit hook to prevent committing sensitive information

echo "üîí Running security checks..."

# Define patterns that should never be committed
FORBIDDEN_PATTERNS=(
    "api_key.*[a-zA-Z0-9]{10,}"
    "api_secret.*[a-zA-Z0-9]{10,}"
    "password.*[a-zA-Z0-9]{6,}"
    "totp_secret.*[A-Z0-9]{16,}"
    "token.*[a-zA-Z0-9]{20,}"
    "KITE_API_KEY=.*[a-zA-Z0-9]"
    "KITE_API_SECRET=.*[a-zA-Z0-9]"
    "KITE_PASSWORD=.*[a-zA-Z0-9]"
)

# Check staged files for forbidden patterns
STAGED_FILES=$(git diff --cached --name-only)

for file in $STAGED_FILES; do
    if [ -f "$file" ]; then
        echo "Checking $file..."
        
        for pattern in "${FORBIDDEN_PATTERNS[@]}"; do
            if grep -qE "$pattern" "$file"; then
                echo "‚ùå SECURITY VIOLATION: Potential credential found in $file"
                echo "   Pattern: $pattern"
                echo "   Please remove sensitive data before committing"
                exit 1
            fi
        done
    fi
done

# Check for credential files that shouldn't be committed
FORBIDDEN_FILES=(
    "config/credentials.yaml"
    "config/secrets.yaml"
    "config/.env"
    ".env"
    "*.key"
    "*.pem"
    "*token.json"
)

for pattern in "${FORBIDDEN_FILES[@]}"; do
    if git diff --cached --name-only | grep -q "$pattern"; then
        echo "‚ùå SECURITY VIOLATION: Forbidden file type: $pattern"
        echo "   Add this file to .gitignore"
        exit 1
    fi
done

echo "‚úÖ Security checks passed"
exit 0